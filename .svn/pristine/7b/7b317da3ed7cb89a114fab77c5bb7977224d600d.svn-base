import processing.core.PApplet;
import processing.core.PGraphics;
import processing.core.PImage;
import processing.core.PVector;
import SimpleOpenNI.*;

public class Skeleton {

	/*
	 * --------------------------------------------------------------------------
	 * SimpleOpenNI User Test
	 * ----------------------------------------------------
	 * ---------------------- Processing Wrapper for the OpenNI/Kinect library
	 * http://code.google.com/p/simple-openni
	 * ------------------------------------
	 * -------------------------------------- prog: Max Rheiner / Interaction
	 * Design / zhdk / http://iad.zhdk.ch/ date: 02/16/2011 (m/d/y)
	 * --------------
	 * --------------------------------------------------------------
	 */

	SimpleOpenNI context;
	boolean autoCalib = true;
	private PApplet p;
	PGraphics pg;

	public Skeleton(PApplet p) {
		this.p = p;
	}

	public void skeletonSetup() {
		p.size(320, 240);
		pg = p.createGraphics(320, 240);
		context = new SimpleOpenNI(p);

		// enable depthMap generation
		if (context.enableDepth() == false) {
			System.out
					.println("Can't open the depthMap, maybe the camera is not connected!");
			return;
		}

		// enable skeleton generation for all joints
		context.enableUser(SimpleOpenNI.SKEL_PROFILE_ALL);

		// background(200,0,0);

		// stroke(0,0,255);
		// strokeWeight(3);
		pg.smooth();

		// size(context.depthWidth(), context.depthHeight());
	}

	public PImage skeletonDraw() {
		// update the cam
		context.update();

		// draw depthImageMap
		p.image(context.depthImage(), 0, 0);

		// draw the skeleton if it's available
		int[] userList = context.getUsers();
		for (int i = 0; i < userList.length; i++) {
			if (context.isTrackingSkeleton(userList[i]))
				// System.out.println(context.isTrackingSkeleton(userList[i]));

				pg = drawSkeleton(userList[i]);
			PVector jointPos = new PVector();
			context.getJointPositionSkeleton(userList[i],
					SimpleOpenNI.SKEL_NECK, jointPos);
			// println(jointPos);
		}
		PImage img = pg.get(0, 0, pg.width, pg.height);
		return img;
	}

	// draw the skeleton with the selected joints
	public PGraphics drawSkeleton(int userId) {
		// size(500, 500);
		PGraphics pg = p.createGraphics(320, 240);

		// to get the 3d joint data
		PVector jointPos = new PVector();
		context.getJointPositionSkeleton(userId, SimpleOpenNI.SKEL_RIGHT_HAND,
				jointPos);
		// System.out.println(jointPos);

		// convert real world point to projective space
		PVector jointPos_Proj = new PVector();
		context.convertRealWorldToProjective(jointPos, jointPos_Proj);

		// a 200 pixel diameter head
		float headsize = 30;

		// set the fill colour to make the circle green
		pg.fill(0, 255, 0);

		// draw the circle at the position of the head with the specified head
		// size
		// ellipse(jointPos_Proj.x,jointPos_Proj.y, headsize,headsize);
		pg.beginDraw();
		pg.fill(0, 255, 0);
		pg.stroke(0, 0, 0);
		pg.ellipse((jointPos_Proj.x) / 2, (jointPos_Proj.y) / 2, headsize,
				headsize);
		pg.endDraw();

		return pg;

	}

}
